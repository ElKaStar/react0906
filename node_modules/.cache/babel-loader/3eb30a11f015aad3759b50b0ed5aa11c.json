{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\licos\\\\WebstormProjects\\\\react\\\\react0906\\\\src\\\\components\\\\Forms\\\\login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { alphaNumeric, minLength1, renderField, requiredString } from \"./Validation\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { connect } from \"react-redux\";\nimport { addMessageActionCreator, addNewMessageTextActionCreator } from \"../../Redux/message-reducer\";\nimport { loginThunkCreator, logoutThunkCreator } from \"../../Redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submit = values => {\n      console.log(values); // print the form values to the console\n\n      this.props.login(values.login, values.password, values.rememberMe);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('login is DIDupdated ' + Date());\n  }\n\n  render() {\n    console.log('props:', this.props);\n\n    if (this.props.isAuth) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n    } //console.log('login is updated ' + Date())\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LoginReduxForm, {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangecaptcha = value => {\n      this.setState({\n        checkedCaptcha: value ? true : false\n      });\n    };\n\n    this.state = {\n      checkedCaptcha: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"LOGIN\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Login\",\n      name: \"login\",\n      type: \"text\",\n      component: renderField,\n      validate: [requiredString, minLength1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      component: renderField,\n      validate: [requiredString, minLength1],\n      warn: alphaNumeric,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"rememberMe\",\n      type: \"checkbox\",\n      component: renderField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), \"remember me\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !this.state.checkedCaptcha,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 24\n      }\n    }, \"ERROR\"), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      sitekey: \"6Le4-a8ZAAAAAAdxK3R8n7ntfVnbLYJqwT87stUC\",\n      onChange: this.onChangecaptcha,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }\n    }))));\n  }\n\n}\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: 'LoginForm'\n})(LoginForm);\n\nlet mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password, rememberMe) => {\n      dispatch(loginThunkCreator(email, password, rememberMe));\n    },\n    logout: () => {\n      dispatch(logoutThunkCreator());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/components/Forms/login.jsx"],"names":["React","Field","reduxForm","alphaNumeric","minLength1","renderField","requiredString","ReCAPTCHA","connect","addMessageActionCreator","addNewMessageTextActionCreator","loginThunkCreator","logoutThunkCreator","Redirect","Login","Component","submit","values","console","log","props","login","password","rememberMe","componentDidUpdate","prevProps","prevState","snapshot","Date","render","isAuth","LoginForm","constructor","onChangecaptcha","value","setState","checkedCaptcha","state","handleSubmit","LoginReduxForm","form","mapStateToProps","auth","mapDispatchToProps","dispatch","email","logout"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {alphaNumeric, minLength1, renderField, requiredString} from \"./Validation\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessageActionCreator, addNewMessageTextActionCreator} from \"../../Redux/message-reducer\";\r\nimport {loginThunkCreator, logoutThunkCreator} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n     submit = values => {\r\n         console.log(values)\r\n\r\n          // print the form values to the console\r\n          this.props.login(values.login, values.password, values.rememberMe)\r\n     }\r\n     componentDidUpdate(prevProps, prevState, snapshot) {\r\n         console.log('login is DIDupdated ' + Date())\r\n     }\r\n\r\n\r\n    render() {\r\n         console.log('props:', this.props)\r\n         if (this.props.isAuth) {\r\n             return <Redirect to={\"/profile\"}/>\r\n         }\r\n         //console.log('login is updated ' + Date())\r\n          return (\r\n              <div>\r\n              <LoginReduxForm onSubmit={this.submit}/>\r\n              </div>\r\n              )\r\n     }\r\n\r\n}\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkedCaptcha : false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onChangecaptcha = (value) => {\r\n       this.setState({\r\n           checkedCaptcha: (value? true: false)\r\n       })\r\n    }\r\nrender() {\r\n     return (\r\n         <div>\r\n              <p>LOGIN</p>\r\n              <form onSubmit={this.props.handleSubmit}>\r\n                   <div>\r\n                        <Field\r\n                            label={\"Login\"}\r\n                            name={\"login\"}\r\n                            type=\"text\"\r\n                            component={renderField}\r\n                            validate={[requiredString, minLength1]}\r\n\r\n                        />\r\n                   </div>\r\n                   <div>\r\n                        <Field\r\n                            label={\"Password\"}\r\n                            name={\"password\"}\r\n                            type={\"password\"}\r\n                            component={renderField}\r\n                            validate={[requiredString, minLength1]}\r\n                            warn={alphaNumeric}\r\n                        />\r\n                   </div>\r\n                   <div>\r\n                        <Field\r\n                            name={\"rememberMe\"}\r\n                            type={\"checkbox\"}\r\n                            component={renderField}\r\n                        />remember me\r\n                   </div>\r\n                   <div>\r\n                        <button disabled={!this.state.checkedCaptcha} type={\"submit\"}>Login</button>\r\n                       <div>ERROR</div>\r\n                       <ReCAPTCHA sitekey='6Le4-a8ZAAAAAAdxK3R8n7ntfVnbLYJqwT87stUC' onChange={this.onChangecaptcha}/>\r\n                   </div>\r\n              </form>\r\n         </div>\r\n\r\n     )\r\n}\r\n\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n     // a unique name for the form\r\n     form: 'LoginForm'\r\n})(LoginForm)\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (email, password, rememberMe) => {\r\n            dispatch(loginThunkCreator(email, password, rememberMe))\r\n        },\r\n        logout: () => {\r\n            dispatch(logoutThunkCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}