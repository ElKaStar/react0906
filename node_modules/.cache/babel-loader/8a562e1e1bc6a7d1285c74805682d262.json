{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst ADD_NEW_MESSAGE_TEXT = 'ADD-NEW-MESSAGE-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      allMessages: [{\n        id: '1',\n        from: 'Elena',\n        to: 'Alice',\n        message: 'Hello. how are you?',\n        date: '25.06.20'\n      }, {\n        id: '2',\n        from: 'Alice',\n        to: 'Elena',\n        message: 'Hello. I am fine. What about you?',\n        date: '25.06.20'\n      }, {\n        id: '3',\n        from: 'Elena',\n        to: 'Tamara',\n        message: 'Hello. how are you?',\n        date: '26.06.20'\n      }],\n      myUsers: [{\n        id: '1',\n        name: 'Elena'\n      }, {\n        id: '2',\n        name: 'Alice'\n      }, {\n        id: '3',\n        name: 'Sergei'\n      }, {\n        id: '4',\n        name: 'Irina'\n      }, {\n        id: '5',\n        name: 'Tamara'\n      }]\n    },\n    myPosts: [{\n      id: '1',\n      from: 'Elena',\n      message: 'It is first post',\n      date: '25.06.20',\n      like: '25'\n    }, {\n      id: '2',\n      from: 'Alice',\n      message: 'Today is funny day',\n      date: '25.06.20',\n      like: '28'\n    }, {\n      id: '3',\n      from: 'Elena',\n      message: 'Today is boring day',\n      date: '26.06.20',\n      like: '8'\n    }],\n    sidebar: {},\n    newPostText: 'enter here',\n    newMessageText: ''\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      this._addPost();\n    } else if (action.type === 'ADD-NEW-POST-TEXT') {\n      this._addNewPostText(action.newText);\n    } else if (action.type === 'ADD-MESSAGE') {\n      this._addMessage();\n    } else if (action.type === 'ADD-NEW-MESSAGE-TEXT') {\n      this._addNewMessageText(action.newMessage);\n    }\n  },\n\n  rerenderTree() {\n    console.log('state has been changed');\n  },\n\n  _addPost() {\n    this._state.myPosts.push({\n      id: '4',\n      from: 'Elena',\n      message: this._state.newPostText,\n      date: '25.06.20',\n      like: '0'\n    });\n\n    this.rerenderTree(this._state);\n    this._state.newPostText = '';\n  },\n\n  _addMessage() {\n    this._state.profilePage.allMessages.push({\n      id: '5',\n      from: 'new',\n      to: 'new',\n      message: this._state.newMessageText,\n      date: '20.06.20'\n    });\n\n    this.rerenderTree(this._state);\n    this._state.newMessageText = '';\n  },\n\n  _addNewPostText(newText) {\n    this._state.newPostText = newText;\n    this.rerenderTree(this._state);\n  },\n\n  _addNewMessageText(newMessage) {\n    this._state.newMessageText = newMessage;\n    this.rerenderTree(this._state);\n  },\n\n  subscribe(observer) {\n    this.rerenderTree = observer;\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const addMessageActionCreator = () => {\n  return {\n    type: ADD_MESSAGE\n  };\n};\nexport const addNewPostTextActionCreator = text => {\n  return {\n    type: ADD_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const addNewMessageTextActionCreator = text => {\n  return {\n    type: ADD_NEW_MESSAGE_TEXT,\n    newMessage: text\n  };\n};\nexport default store;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/Redux/State.js"],"names":["ADD_POST","ADD_NEW_POST_TEXT","ADD_MESSAGE","ADD_NEW_MESSAGE_TEXT","store","_state","profilePage","allMessages","id","from","to","message","date","myUsers","name","myPosts","like","sidebar","newPostText","newMessageText","getState","dispatch","action","type","_addPost","_addNewPostText","newText","_addMessage","_addNewMessageText","newMessage","rerenderTree","console","log","push","subscribe","observer","addPostActionCreator","addMessageActionCreator","addNewPostTextActionCreator","text","addNewMessageTextActionCreator"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT'\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst ADD_NEW_MESSAGE_TEXT = 'ADD-NEW-MESSAGE-TEXT'\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            allMessages: [\r\n                {\r\n                    id: '1',\r\n                    from: 'Elena',\r\n                    to: 'Alice',\r\n                    message: 'Hello. how are you?',\r\n                    date: '25.06.20'\r\n                },\r\n                {\r\n                    id: '2',\r\n                    from: 'Alice',\r\n                    to: 'Elena',\r\n                    message: 'Hello. I am fine. What about you?',\r\n                    date: '25.06.20'\r\n                },\r\n                {\r\n                    id: '3',\r\n                    from: 'Elena',\r\n                    to: 'Tamara',\r\n                    message: 'Hello. how are you?',\r\n                    date: '26.06.20'\r\n                }\r\n            ],\r\n\r\n            myUsers: [\r\n                {id: '1', name: 'Elena'},\r\n                {id: '2', name: 'Alice'},\r\n                {id: '3', name: 'Sergei'},\r\n                {id: '4', name: 'Irina'},\r\n                {id: '5', name: 'Tamara'}\r\n            ]\r\n        },\r\n\r\n        myPosts: [\r\n            {\r\n                id: '1',\r\n                from: 'Elena',\r\n                message: 'It is first post',\r\n                date: '25.06.20',\r\n                like: '25'\r\n            },\r\n            {\r\n                id: '2',\r\n                from: 'Alice',\r\n                message: 'Today is funny day',\r\n                date: '25.06.20',\r\n                like: '28'\r\n            },\r\n            {\r\n                id: '3',\r\n                from: 'Elena',\r\n                message: 'Today is boring day',\r\n                date: '26.06.20',\r\n                like: '8'\r\n            }\r\n        ],\r\n        sidebar: {},\r\n        newPostText: 'enter here',\r\n        newMessageText: ''\r\n\r\n    },\r\n    getState() {\r\n      return this._state\r\n    },\r\n    dispatch(action) {\r\n      if (action.type === 'ADD-POST')  {\r\n         this._addPost()\r\n      } else if (action.type === 'ADD-NEW-POST-TEXT') {\r\n          this._addNewPostText(action.newText)\r\n      } else if (action.type === 'ADD-MESSAGE') {\r\n          this._addMessage()\r\n      } else if (action.type === 'ADD-NEW-MESSAGE-TEXT') {\r\n          this._addNewMessageText(action.newMessage)\r\n      }\r\n    },\r\n    rerenderTree() {\r\n        console.log('state has been changed')\r\n    },\r\n    _addPost() {\r\n\r\n\r\n        this._state.myPosts.push({id: '4', from: 'Elena', message: this._state.newPostText, date: '25.06.20', like: '0'})\r\n        this.rerenderTree(this._state)\r\n        this._state.newPostText = ''\r\n    },\r\n    _addMessage() {\r\n       this._state.profilePage.allMessages.push(\r\n           {\r\n           id: '5',\r\n           from: 'new',\r\n           to: 'new',\r\n           message: this._state.newMessageText,\r\n           date: '20.06.20'\r\n       })\r\n        this.rerenderTree(this._state)\r\n        this._state.newMessageText = ''\r\n    },\r\n    _addNewPostText(newText) {\r\n\r\n        this._state.newPostText = newText\r\n        this.rerenderTree(this._state)\r\n    },\r\n    _addNewMessageText(newMessage) {\r\n\r\n        this._state.newMessageText = newMessage\r\n        this.rerenderTree(this._state)\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this.rerenderTree = observer\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n\r\n    return (\r\n        {\r\n            type: ADD_POST\r\n        }\r\n    )\r\n}\r\nexport const addMessageActionCreator = () => {\r\n\r\n    return (\r\n        {\r\n            type: ADD_MESSAGE\r\n        }\r\n    )\r\n}\r\n\r\nexport const addNewPostTextActionCreator = (text) => {\r\n    return (\r\n        {\r\n            type: ADD_NEW_POST_TEXT,\r\n            newText: text\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const addNewMessageTextActionCreator = (text) => {\r\n    return (\r\n        {\r\n            type: ADD_NEW_MESSAGE_TEXT,\r\n            newMessage: text\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}