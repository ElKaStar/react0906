{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\licos\\\\WebstormProjects\\\\react\\\\react0906\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport { addFollow, getCurrentUserID, getUsersThunkCreator, setCurrentPage, setFetching, setFollowingInProgress, setFollowThunkCreator, setUnfollowThunkCreator, setUsers, showLastUsers, showNextUsers } from \"../../Redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Loader from './loader';\nimport User from \"./User\";\nimport { Redirect } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getCurrentUserIDS, getFollowingInProgress, getIsAuth, getIsFetching, getPageSize, getStartPosition, getTotalUsersCount, getUsers } from \"../../Redux/users-selectors\";\n\nclass UserClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsersFromServer = (pageNumber, pageSize) => {\n      this.props.getUsersThunkCreator(pageNumber, pageSize);\n    };\n\n    this.onPageChanged = itemNumber => {\n      this.props.setCurrentPage(itemNumber);\n      this.getUsersFromServer(itemNumber, this.props.pagingSize);\n    };\n\n    this.setCurrentUserID = id => {\n      this.props.getCurrentUserID(id);\n    };\n\n    this.onClickNextHandler = nextPage => {\n      this.props.showNextUsers();\n      this.getUsersFromServer(nextPage, this.props.pagingSize);\n    };\n\n    this.onClickLastHandler = lastPage => {\n      this.props.showLastUsers();\n      this.getUsersFromServer(lastPage, this.props.pagingSize);\n    };\n  }\n\n  componentDidMount() {\n    this.getUsersFromServer(this.props.currentPage, this.props.pagingSize);\n  }\n\n  render() {\n    let pageCount = Math.ceil(this.props.totalUsersCount / this.props.pagingSize);\n    let arrPages = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      arrPages.push(i);\n    } //let newUsers = this.props.users.slice(this.props.startPosition, this.props.startPosition + this.props.pagingSize)\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.props.isFetching ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 46\n      }\n    }) : /*#__PURE__*/React.createElement(Users, {\n      pageCount: pageCount,\n      arrPages: arrPages,\n      userPage: this.props,\n      onClickLastHandler: this.onClickLastHandler,\n      onClickNextHandler: this.onClickNextHandler,\n      onPageChanged: this.onPageChanged,\n      setCurrentUserID: this.setCurrentUserID,\n      setFollowingInProgress: this.props.setFollowingInProgress,\n      setFollowThunkCreator: this.props.setFollowThunkCreator,\n      setUnfollowThunkCreator: this.props.setUnfollowThunkCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 58\n      }\n    }));\n  }\n\n} // let mapStateToProps = (state) => {\n//     console.log(state);\n//     return {\n//         users: state.users.users,\n//         pagingSize: state.users.pagingSize,\n//         startPosition: state.users.startPosition,\n//         totalUsersCount: state.users.totalUsersCount,\n//         currentPage: state.users.currentPage,\n//         isFetching: state.users.isFetching,\n//         currentUserID: state.users.currentUserID,\n//         followingInProgress: state.users.followingInProgress,\n//         isAuth: state.auth.isAuth\n//     }\n// }\n\n\nlet mapStateToProps = state => {\n  console.log(state);\n  return {\n    users: getUsers(state),\n    pagingSize: getPageSize(state),\n    startPosition: getStartPosition(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    currentUserID: getCurrentUserIDS(state),\n    followingInProgress: getFollowingInProgress(state),\n    isAuth: getIsAuth(state)\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         showNextUsers: () => {dispatch(showNextUsersActionCreator())},\n//         showLastUsers: () => {dispatch(showLastUsersActionCreator())},\n//         addFollow: (id) => {dispatch(addFollowActionCreator(id))},\n//         setUsers: (newUsers, totalUsersCount) => {dispatch(addNewUsersActionCreator(newUsers, totalUsersCount))},\n//         setCurrentPage: (newCurrentPage) => {dispatch(setCurrentPageActionCreator(newCurrentPage))},\n//         setFetching: (isFetching) => {dispatch(setFetchingActionCreator(isFetching))}\n//     }\n// }\n//let AuthRedirectComponent = withAuthRedirect(UserClass)\n//const UsersContainer = connect(mapStateToProps,\n//     {\n//         showNextUsers,\n//         showLastUsers,\n//         addFollow,\n//         setUsers,\n//         setCurrentPage,\n//         setFetching,\n//         getCurrentUserID,\n//         setFollowingInProgress,\n//         getUsersThunkCreator,\n//         setFollowThunkCreator,\n//         setUnfollowThunkCreator\n//     }\n//     )(AuthRedirectComponent)\n\n\nconst UsersContainer = compose(connect(mapStateToProps, {\n  showNextUsers,\n  showLastUsers,\n  addFollow,\n  setUsers,\n  setCurrentPage,\n  setFetching,\n  getCurrentUserID,\n  setFollowingInProgress,\n  getUsersThunkCreator,\n  setFollowThunkCreator,\n  setUnfollowThunkCreator\n}), withAuthRedirect)(UserClass);\nexport default UsersContainer;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/components/Users/UsersContainer.jsx"],"names":["React","Users","connect","addFollow","getCurrentUserID","getUsersThunkCreator","setCurrentPage","setFetching","setFollowingInProgress","setFollowThunkCreator","setUnfollowThunkCreator","setUsers","showLastUsers","showNextUsers","axios","Loader","User","Redirect","withAuthRedirect","compose","getCurrentPage","getCurrentUserIDS","getFollowingInProgress","getIsAuth","getIsFetching","getPageSize","getStartPosition","getTotalUsersCount","getUsers","UserClass","Component","constructor","props","getUsersFromServer","pageNumber","pageSize","onPageChanged","itemNumber","pagingSize","setCurrentUserID","id","onClickNextHandler","nextPage","onClickLastHandler","lastPage","componentDidMount","currentPage","render","pageCount","Math","ceil","totalUsersCount","arrPages","i","push","isFetching","mapStateToProps","state","console","log","users","startPosition","currentUserID","followingInProgress","isAuth","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addFollow, getCurrentUserID, getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setFetching, setFollowingInProgress, setFollowThunkCreator, setUnfollowThunkCreator,\r\n    setUsers,\r\n    showLastUsers,\r\n    showNextUsers\r\n} from \"../../Redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Loader from './loader'\r\nimport User from \"./User\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getCurrentUserIDS, getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getStartPosition,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\n\r\nclass UserClass extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    getUsersFromServer = (pageNumber, pageSize) => {\r\n        this.props.getUsersThunkCreator(pageNumber, pageSize);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsersFromServer(this.props.currentPage,this.props.pagingSize)\r\n    }\r\n\r\n    onPageChanged = (itemNumber) => {\r\n        this.props.setCurrentPage(itemNumber)\r\n        this.getUsersFromServer(itemNumber,this.props.pagingSize)\r\n    }\r\n setCurrentUserID = (id) => {\r\n        this.props.getCurrentUserID(id)\r\n }\r\n\r\n\r\n    onClickNextHandler = (nextPage) => {\r\n\r\n        this.props.showNextUsers()\r\n        this.getUsersFromServer(nextPage,this.props.pagingSize)\r\n    }\r\n\r\n    onClickLastHandler = (lastPage) => {\r\n\r\n        this.props.showLastUsers()\r\n        this.getUsersFromServer(lastPage,this.props.pagingSize)\r\n    }\r\n\r\n    render() {\r\n        let pageCount = Math.ceil(this.props.totalUsersCount/this.props.pagingSize)\r\n        let arrPages = []\r\n        for (let i=1; i<= pageCount; i++) {\r\n            arrPages.push(i)\r\n        }\r\n        //let newUsers = this.props.users.slice(this.props.startPosition, this.props.startPosition + this.props.pagingSize)\r\n\r\n\r\n            return (\r\n                <div>\r\n                    {this.props.isFetching ? <Loader/> : <Users pageCount={pageCount}\r\n                                                                arrPages={arrPages}\r\n                                                                userPage={this.props}\r\n                                                                onClickLastHandler={this.onClickLastHandler}\r\n                                                                onClickNextHandler={this.onClickNextHandler}\r\n                                                                onPageChanged={this.onPageChanged}\r\n                                                                setCurrentUserID={this.setCurrentUserID}\r\n                                                                setFollowingInProgress={this.props.setFollowingInProgress}\r\n                                                                setFollowThunkCreator={this.props.setFollowThunkCreator}\r\n                                                                setUnfollowThunkCreator={this.props.setUnfollowThunkCreator}\r\n\r\n                    />}\r\n                </div>)\r\n        }\r\n\r\n\r\n\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     console.log(state);\r\n//     return {\r\n//         users: state.users.users,\r\n//         pagingSize: state.users.pagingSize,\r\n//         startPosition: state.users.startPosition,\r\n//         totalUsersCount: state.users.totalUsersCount,\r\n//         currentPage: state.users.currentPage,\r\n//         isFetching: state.users.isFetching,\r\n//         currentUserID: state.users.currentUserID,\r\n//         followingInProgress: state.users.followingInProgress,\r\n//         isAuth: state.auth.isAuth\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        users: getUsers(state),\r\n        pagingSize: getPageSize(state),\r\n        startPosition: getStartPosition(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        currentUserID: getCurrentUserIDS(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         showNextUsers: () => {dispatch(showNextUsersActionCreator())},\r\n//         showLastUsers: () => {dispatch(showLastUsersActionCreator())},\r\n//         addFollow: (id) => {dispatch(addFollowActionCreator(id))},\r\n//         setUsers: (newUsers, totalUsersCount) => {dispatch(addNewUsersActionCreator(newUsers, totalUsersCount))},\r\n//         setCurrentPage: (newCurrentPage) => {dispatch(setCurrentPageActionCreator(newCurrentPage))},\r\n//         setFetching: (isFetching) => {dispatch(setFetchingActionCreator(isFetching))}\r\n//     }\r\n// }\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(UserClass)\r\n\r\n\r\n\r\n//const UsersContainer = connect(mapStateToProps,\r\n//     {\r\n//         showNextUsers,\r\n//         showLastUsers,\r\n//         addFollow,\r\n//         setUsers,\r\n//         setCurrentPage,\r\n//         setFetching,\r\n//         getCurrentUserID,\r\n//         setFollowingInProgress,\r\n//         getUsersThunkCreator,\r\n//         setFollowThunkCreator,\r\n//         setUnfollowThunkCreator\r\n//     }\r\n//     )(AuthRedirectComponent)\r\n\r\nconst UsersContainer = compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            showNextUsers,\r\n            showLastUsers,\r\n            addFollow,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setFetching,\r\n            getCurrentUserID,\r\n            setFollowingInProgress,\r\n            getUsersThunkCreator,\r\n            setFollowThunkCreator,\r\n            setUnfollowThunkCreator}),\r\n            withAuthRedirect\r\n)(UserClass)\r\n\r\nexport default UsersContainer"]},"metadata":{},"sourceType":"module"}