{"ast":null,"code":"import React from'react';import st from'./Dialogs.module.css';import{NavLink,Redirect}from\"react-router-dom\";import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import Login from\"../../Forms/login\";import FormNewMessage from\"../../Forms/FormNewMessage\";var Dialogs=function Dialogs(props){console.log(props);var newRef=React.createRef();var onClickHandler=function onClickHandler(newMessage){props.addMessage(newMessage);};var onChangeHandler=function onChangeHandler(e){props.addNewMessageText(e.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:st.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:st.dialogs_items},props.profilePage.profilePage.myUsers.map(function(element){return/*#__PURE__*/React.createElement(\"div\",{key:element.id},/*#__PURE__*/React.createElement(DialogItem,{name:element.name,id:element.id}));})),/*#__PURE__*/React.createElement(\"div\",{className:st.messages},/*#__PURE__*/React.createElement(FormNewMessage,{onClickHandler:onClickHandler}),props.profilePage.profilePage.allMessages.map(function(element){return/*#__PURE__*/React.createElement(\"div\",{key:element.id},/*#__PURE__*/React.createElement(Message,{item:element.date+' From '+element.from+' to '+element.to+' : '+element.message}));})));};export default Dialogs;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/components/Content/Dialogs/Dialogs.jsx"],"names":["React","st","NavLink","Redirect","DialogItem","Message","Login","FormNewMessage","Dialogs","props","console","log","newRef","createRef","onClickHandler","newMessage","addMessage","onChangeHandler","e","addNewMessageText","target","value","dialogs","dialogs_items","profilePage","myUsers","map","element","id","name","messages","allMessages","date","from","to","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,sBAAf,CACA,OAAQC,OAAR,CAAiBC,QAAjB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAC3BC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACI,GAAIG,CAAAA,MAAM,CAAGZ,KAAK,CAACa,SAAN,EAAb,CAEA,GAAIC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CACjCN,KAAK,CAACO,UAAN,CAAiBD,UAAjB,EACH,CAFD,CAIA,GAAIE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CACzBT,KAAK,CAACU,iBAAN,CAAwBD,CAAC,CAACE,MAAF,CAASC,KAAjC,EACH,CAFD,CAKA,mBAEY,2BAAK,SAAS,CAAEpB,EAAE,CAACqB,OAAnB,eACI,2BAAK,SAAS,CAAErB,EAAE,CAACsB,aAAnB,EACKd,KAAK,CAACe,WAAN,CAAkBA,WAAlB,CAA8BC,OAA9B,CAAsCC,GAAtC,CAA0C,SAACC,OAAD,CAAa,CACpD,mBACI,2BAAK,GAAG,CAAEA,OAAO,CAACC,EAAlB,eACI,oBAAC,UAAD,EAAY,IAAI,CAAED,OAAO,CAACE,IAA1B,CAAgC,EAAE,CAAEF,OAAO,CAACC,EAA5C,EADJ,CADJ,CAKH,CANA,CADL,CADJ,cAWI,2BAAK,SAAS,CAAE3B,EAAE,CAAC6B,QAAnB,eACI,oBAAC,cAAD,EAAgB,cAAc,CAAEhB,cAAhC,EADJ,CAEKL,KAAK,CAACe,WAAN,CAAkBA,WAAlB,CAA8BO,WAA9B,CAA0CL,GAA1C,CAA8C,SAACC,OAAD,CAAa,CACxD,mBACI,2BAAK,GAAG,CAAEA,OAAO,CAACC,EAAlB,eACI,oBAAC,OAAD,EACI,IAAI,CAAED,OAAO,CAACK,IAAR,CAAe,QAAf,CAA0BL,OAAO,CAACM,IAAlC,CAAyC,MAAzC,CAAkDN,OAAO,CAACO,EAA1D,CAA+D,KAA/D,CAAuEP,OAAO,CAACQ,OADzF,EADJ,CADJ,CAMH,CAPA,CAFL,CAXJ,CAFZ,CA4BH,CAzCD,CA0CA,cAAe3B,CAAAA,OAAf","sourcesContent":["import React from 'react'\r\nimport st from './Dialogs.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Login from \"../../Forms/login\";\r\nimport FormNewMessage from \"../../Forms/FormNewMessage\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\nconsole.log(props)\r\n    let newRef = React.createRef()\r\n\r\n    let onClickHandler = (newMessage) => {\r\n        props.addMessage(newMessage)\r\n    }\r\n\r\n    let onChangeHandler = (e) => {\r\n        props.addNewMessageText(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n                <div className={st.dialogs}>\r\n                    <div className={st.dialogs_items}>\r\n                        {props.profilePage.profilePage.myUsers.map((element) => {\r\n                            return (\r\n                                <div key={element.id}>\r\n                                    <DialogItem name={element.name} id={element.id}/>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                    <div className={st.messages}>\r\n                        <FormNewMessage onClickHandler={onClickHandler}/>\r\n                        {props.profilePage.profilePage.allMessages.map((element) => {\r\n                            return (\r\n                                <div key={element.id}>\r\n                                    <Message\r\n                                        item={element.date + ' From ' + element.from + ' to ' + element.to + ' : ' + element.message}/>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n    )\r\n}\r\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}