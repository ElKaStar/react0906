{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\licos\\\\WebstormProjects\\\\react\\\\react0906\\\\src\\\\components\\\\Content\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Content from \"../Content\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { addRequestedUserIdActionCreator, getProfileThunkCreator, getStatusThunkCreator, getUserInfoActionCreator, isFetchingActionCreator, updateStatusThunkCreator } from \"../../../Redux/content-reducer\";\nimport Loader from \"./../../Users/loader\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { withRouter } from \"react-router-dom\";\nimport { getProfile, usersAPI } from \"../../../API/api\";\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileClass extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let userID = !this.props.match.params.UserID ? this.props.authUserID : this.props.match.params.UserID;\n\n    if (!userID) {\n      this.props.history.push('/login');\n    }\n\n    console.log('userID', userID);\n    this.props.getProfileThunkCreator(userID);\n    this.props.getStatusThunkCreator(userID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.props.userInfo === null ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(Content, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 65\n      }\n    })));\n  }\n\n} //let AuthRedirectComponent = withAuthRedirect(ProfileClass)\n\n\nlet mapStateToProps = state => {\n  console.log(state);\n  return {\n    userInfo: state.myPosts.userInfo,\n    requestUserId: state.myPosts.requestUserId,\n    authUserID: state.auth.userID,\n    status: state.myPosts.status,\n    isFetching: state.myPosts.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    getUserInfo: userInfo => {\n      dispatch(getUserInfoActionCreator(userInfo));\n    },\n    addRequestedUserId: () => {\n      dispatch(addRequestedUserIdActionCreator());\n    },\n    getProfileThunkCreator: userID => {\n      dispatch(getProfileThunkCreator(userID));\n    },\n    getStatusThunkCreator: userID => {\n      dispatch(getStatusThunkCreator(userID));\n    },\n    updateStatusThunkCreator: status => {\n      dispatch(updateStatusThunkCreator(status));\n    }\n  };\n};\n\nconst ProfileContainer = compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withAuthRedirect)(ProfileClass); //let withRouterDataContainerComponent = withRouter(AuthRedirectComponent)\n//const ProfileContainer = connect(mapStateToProps,mapDispatchToProps)(withRouterDataContainerComponent)\n\nexport default ProfileContainer;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/components/Content/Profile/ProfileContainer.jsx"],"names":["React","Content","axios","connect","addRequestedUserIdActionCreator","getProfileThunkCreator","getStatusThunkCreator","getUserInfoActionCreator","isFetchingActionCreator","updateStatusThunkCreator","Loader","Redirect","Route","withRouter","getProfile","usersAPI","withAuthRedirect","compose","ProfileClass","Component","constructor","props","componentDidMount","userID","match","params","UserID","authUserID","history","push","console","log","render","userInfo","mapStateToProps","state","myPosts","requestUserId","auth","status","isFetching","mapDispatchToProps","dispatch","getUserInfo","addRequestedUserId","ProfileContainer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Content from \"../Content\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addRequestedUserIdActionCreator,\r\n    getProfileThunkCreator, getStatusThunkCreator,\r\n    getUserInfoActionCreator, isFetchingActionCreator, updateStatusThunkCreator\r\n} from \"../../../Redux/content-reducer\";\r\nimport Loader from \"./../../Users/loader\";\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProfile, usersAPI} from \"../../../API/api\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let userID = (!this.props.match.params.UserID ? this.props.authUserID : this.props.match.params.UserID)\r\n        if (!userID) {\r\n            this.props.history.push('/login')\r\n        }\r\n        console.log('userID', userID)\r\n        this.props.getProfileThunkCreator(userID)\r\n        this.props.getStatusThunkCreator(userID)\r\n    }\r\n\r\n    render() {\r\n\r\n            return (\r\n                <div>\r\n                    {this.props.userInfo === null ? <Loader/> : <Content {...this.props}/>}\r\n                </div>\r\n            )\r\n\r\n\r\n    }\r\n}\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(ProfileClass)\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        userInfo: state.myPosts.userInfo,\r\n        requestUserId: state.myPosts.requestUserId,\r\n        authUserID: state.auth.userID,\r\n        status:state.myPosts.status,\r\n        isFetching: state.myPosts.isFetching\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUserInfo: (userInfo) => {dispatch(getUserInfoActionCreator(userInfo))},\r\n        addRequestedUserId: () => {dispatch(addRequestedUserIdActionCreator())},\r\n        getProfileThunkCreator: (userID) => {dispatch(getProfileThunkCreator(userID))},\r\n        getStatusThunkCreator: (userID) => {dispatch(getStatusThunkCreator(userID))},\r\n        updateStatusThunkCreator: (status) => {dispatch(updateStatusThunkCreator(status))}\r\n         }\r\n}\r\nconst ProfileContainer = compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileClass)\r\n\r\n//let withRouterDataContainerComponent = withRouter(AuthRedirectComponent)\r\n//const ProfileContainer = connect(mapStateToProps,mapDispatchToProps)(withRouterDataContainerComponent)\r\n\r\nexport default ProfileContainer"]},"metadata":{},"sourceType":"module"}