{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u043C\\u0435\\u043D \\u0422\\u0438\\u0442\\u043E\\u0432\\\\WebstormProjects\\\\react0906\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport { addFollow, getCurrentUserID, getUsersThunkCreator, setCurrentPage, setFetching, setFollowingInProgress, setUsers, showLastUsers, showNextUsers } from \"../../Redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Loader from './loader';\n\nclass UserClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsersFromServer = (pageNumber, pageSize) => {\n      this.props.getUsersThunkCreator(pageNumber, pageSize);\n    };\n\n    this.onPageChanged = itemNumber => {\n      this.props.setCurrentPage(itemNumber);\n      this.getUsersFromServer(itemNumber, this.props.pagingSize);\n    };\n\n    this.setCurrentUserID = id => {\n      this.props.getCurrentUserID(id);\n    };\n\n    this.onClickNextHandler = nextPage => {\n      this.props.showNextUsers();\n      this.getUsersFromServer(nextPage, this.props.pagingSize);\n    };\n\n    this.onClickLastHandler = lastPage => {\n      this.props.showLastUsers();\n      this.getUsersFromServer(lastPage, this.props.pagingSize);\n    };\n  }\n\n  componentDidMount() {\n    this.getUsersFromServer(this.props.currentPage, this.props.pagingSize);\n  }\n\n  render() {\n    let pageCount = Math.ceil(this.props.totalUsersCount / this.props.pagingSize);\n    let arrPages = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n      arrPages.push(i);\n    } //let newUsers = this.props.users.slice(this.props.startPosition, this.props.startPosition + this.props.pagingSize)\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, this.props.isFetching ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(Users, {\n      pageCount: pageCount,\n      arrPages: arrPages,\n      userPage: this.props,\n      onClickLastHandler: this.onClickLastHandler,\n      onClickNextHandler: this.onClickNextHandler,\n      onPageChanged: this.onPageChanged,\n      setCurrentUserID: this.setCurrentUserID,\n      setFollowingInProgress: this.props.setFollowingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  console.log(state);\n  return {\n    users: state.users.users,\n    pagingSize: state.users.pagingSize,\n    startPosition: state.users.startPosition,\n    totalUsersCount: state.users.totalUsersCount,\n    currentPage: state.users.currentPage,\n    isFetching: state.users.isFetching,\n    currentUserID: state.users.currentUserID,\n    followingInProgress: state.users.followingInProgress\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         showNextUsers: () => {dispatch(showNextUsersActionCreator())},\n//         showLastUsers: () => {dispatch(showLastUsersActionCreator())},\n//         addFollow: (id) => {dispatch(addFollowActionCreator(id))},\n//         setUsers: (newUsers, totalUsersCount) => {dispatch(addNewUsersActionCreator(newUsers, totalUsersCount))},\n//         setCurrentPage: (newCurrentPage) => {dispatch(setCurrentPageActionCreator(newCurrentPage))},\n//         setFetching: (isFetching) => {dispatch(setFetchingActionCreator(isFetching))}\n//     }\n// }\n\n\nconst UsersContainer = connect(mapStateToProps, {\n  showNextUsers,\n  showLastUsers,\n  addFollow,\n  setUsers,\n  setCurrentPage,\n  setFetching,\n  getCurrentUserID,\n  setFollowingInProgress,\n  getUsersThunkCreator\n})(UserClass);\nexport default UsersContainer;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/components/Users/UsersContainer.jsx"],"names":["React","Users","connect","addFollow","getCurrentUserID","getUsersThunkCreator","setCurrentPage","setFetching","setFollowingInProgress","setUsers","showLastUsers","showNextUsers","axios","Loader","UserClass","Component","constructor","props","getUsersFromServer","pageNumber","pageSize","onPageChanged","itemNumber","pagingSize","setCurrentUserID","id","onClickNextHandler","nextPage","onClickLastHandler","lastPage","componentDidMount","currentPage","render","pageCount","Math","ceil","totalUsersCount","arrPages","i","push","isFetching","mapStateToProps","state","console","log","users","startPosition","currentUserID","followingInProgress","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addFollow, getCurrentUserID, getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setFetching, setFollowingInProgress,\r\n    setUsers,\r\n    showLastUsers,\r\n    showNextUsers\r\n} from \"../../Redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Loader from './loader'\r\n\r\n\r\n\r\nclass UserClass extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    getUsersFromServer = (pageNumber, pageSize) => {\r\n        this.props.getUsersThunkCreator(pageNumber, pageSize);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsersFromServer(this.props.currentPage,this.props.pagingSize)\r\n    }\r\n\r\n    onPageChanged = (itemNumber) => {\r\n        this.props.setCurrentPage(itemNumber)\r\n        this.getUsersFromServer(itemNumber,this.props.pagingSize)\r\n    }\r\n setCurrentUserID = (id) => {\r\n        this.props.getCurrentUserID(id)\r\n }\r\n\r\n\r\n    onClickNextHandler = (nextPage) => {\r\n\r\n        this.props.showNextUsers()\r\n        this.getUsersFromServer(nextPage,this.props.pagingSize)\r\n    }\r\n\r\n    onClickLastHandler = (lastPage) => {\r\n\r\n        this.props.showLastUsers()\r\n        this.getUsersFromServer(lastPage,this.props.pagingSize)\r\n    }\r\n\r\n    render() {\r\n        let pageCount = Math.ceil(this.props.totalUsersCount/this.props.pagingSize)\r\n        let arrPages = []\r\n        for (let i=1; i<= pageCount; i++) {\r\n            arrPages.push(i)\r\n        }\r\n        //let newUsers = this.props.users.slice(this.props.startPosition, this.props.startPosition + this.props.pagingSize)\r\n        return (\r\n           <div>\r\n           {this.props.isFetching? <Loader/> : <Users pageCount={pageCount}\r\n                                                      arrPages={arrPages}\r\n                                                      userPage={this.props}\r\n                                                      onClickLastHandler={this.onClickLastHandler}\r\n                                                      onClickNextHandler={this.onClickNextHandler}\r\n                                                      onPageChanged={this.onPageChanged}\r\n                                                      setCurrentUserID={this.setCurrentUserID}\r\n                                                      setFollowingInProgress={this.props.setFollowingInProgress}\r\n\r\n        />}\r\n           </div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        users: state.users.users,\r\n        pagingSize: state.users.pagingSize,\r\n        startPosition: state.users.startPosition,\r\n        totalUsersCount: state.users.totalUsersCount,\r\n        currentPage: state.users.currentPage,\r\n        isFetching: state.users.isFetching,\r\n        currentUserID: state.users.currentUserID,\r\n        followingInProgress: state.users.followingInProgress\r\n\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         showNextUsers: () => {dispatch(showNextUsersActionCreator())},\r\n//         showLastUsers: () => {dispatch(showLastUsersActionCreator())},\r\n//         addFollow: (id) => {dispatch(addFollowActionCreator(id))},\r\n//         setUsers: (newUsers, totalUsersCount) => {dispatch(addNewUsersActionCreator(newUsers, totalUsersCount))},\r\n//         setCurrentPage: (newCurrentPage) => {dispatch(setCurrentPageActionCreator(newCurrentPage))},\r\n//         setFetching: (isFetching) => {dispatch(setFetchingActionCreator(isFetching))}\r\n//     }\r\n// }\r\n\r\nconst UsersContainer = connect(mapStateToProps,\r\n    {\r\n        showNextUsers,\r\n        showLastUsers,\r\n        addFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setFetching,\r\n        getCurrentUserID,\r\n        setFollowingInProgress,\r\n        getUsersThunkCreator\r\n    }\r\n    )(UserClass)\r\nexport default UsersContainer"]},"metadata":{},"sourceType":"module"}