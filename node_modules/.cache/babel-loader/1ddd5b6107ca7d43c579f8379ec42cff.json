{"ast":null,"code":"import { getProfile, profileAPI, setUnfollow } from \"../API/api\";\nimport { addFollow, setFollowingInProgress } from \"./users-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT';\nconst GET_USER_INFO = 'GET_USER-INFO';\nconst REQUESTED_USER_ID = 'REQUESTED-USER_ID';\nconst GET_STATUS = 'GET-STATUS';\nconst UPDATE_STATUS = 'UPDATE-STATUS';\nconst is_Fetching = 'is-Fetching';\nconst update_Photo = 'update_Photo';\nconst update_DetailsInfo = 'update_DetailsInfo';\nlet initialState = {\n  myPosts: [{\n    id: '1',\n    from: 'Elena',\n    message: 'It is first post',\n    date: '25.06.20',\n    like: '25'\n  }, {\n    id: '2',\n    from: 'Alice',\n    message: 'Today is funny day',\n    date: '25.06.20',\n    like: '28'\n  }, {\n    id: '3',\n    from: 'Elena',\n    message: 'Today is boring day',\n    date: '26.06.20',\n    like: '8'\n  }],\n  newPostText: 'enter here',\n  userInfo: null,\n  requestUserId: 10,\n  status: '',\n  isFetching: false,\n  profilePhoto: ''\n};\n\nconst contentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return { ...state,\n          myPosts: [...state.myPosts, {\n            id: '4',\n            from: 'Elena',\n            message: action.newPost,\n            date: '25.06.20',\n            like: '0'\n          }],\n          newPostText: ''\n        };\n        break;\n      }\n\n    case ADD_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n        break;\n      }\n\n    case REQUESTED_USER_ID:\n      {\n        return { ...state,\n          requestUserId: action.id\n        };\n        break;\n      }\n\n    case GET_USER_INFO:\n      {\n        let copyUserInfo = action.userInfo;\n        return { ...state,\n          userInfo: copyUserInfo,\n          profilePhoto: copyUserInfo.photos.small\n        };\n        break;\n      }\n\n    case GET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case UPDATE_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case is_Fetching:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case update_Photo:\n      {\n        return { ...state,\n          profilePhoto: action.profilePhoto\n        };\n      }\n\n    case update_DetailsInfo:\n      {\n        return { ...state,\n          userInfo: { ...state.userInfo,\n            aboutMe: action.details.aboutMe,\n            lookingForAJobDescription: action.details.lookingForAJobDescription\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport const addPostActionCreator = newPost => {\n  return {\n    type: ADD_POST,\n    newPost: newPost\n  };\n};\nexport const addNewPostTextActionCreator = text => {\n  return {\n    type: ADD_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const getUserInfoActionCreator = userInfo => {\n  return {\n    type: GET_USER_INFO,\n    userInfo: userInfo\n  };\n};\nexport const addRequestedUserIdActionCreator = id => {\n  return {\n    type: REQUESTED_USER_ID,\n    id: id\n  };\n};\nexport const getStatusActionCreator = status => {\n  return {\n    type: GET_STATUS,\n    status: status\n  };\n};\nexport const isFetchingActionCreator = isFetching => {\n  return {\n    type: is_Fetching,\n    isFetching: isFetching\n  };\n};\n\nconst updatePhoto = profilePhoto => {\n  return {\n    type: update_Photo,\n    profilePhoto: profilePhoto\n  };\n};\n\nconst updateProfileDetails = details => {\n  return {\n    type: update_DetailsInfo,\n    details: details\n  };\n};\n\nexport const getProfileThunkCreator = userID => {\n  return dispatch => {\n    dispatch(isFetchingActionCreator(true));\n    getProfile(userID).then(data => {\n      dispatch(getUserInfoActionCreator(data));\n    });\n    dispatch(isFetchingActionCreator(false));\n  };\n};\nexport const getStatusThunkCreator = userID => {\n  return dispatch => {\n    dispatch(isFetchingActionCreator(true));\n    profileAPI.getStatus(userID).then(data => {\n      dispatch(getStatusActionCreator(data.data));\n      dispatch(isFetchingActionCreator(false));\n    });\n  };\n};\nexport const updateStatusThunkCreator = status => {\n  return dispatch => {\n    dispatch(isFetchingActionCreator(true));\n    profileAPI.updateStatus(status).then(data => {\n      dispatch(getStatusActionCreator(status));\n      debugger;\n    });\n    dispatch(isFetchingActionCreator(false));\n  };\n};\nexport const changeProfilePhotoOnServerTC = file => {\n  return dispatch => {\n    dispatch(isFetchingActionCreator(true));\n    profileAPI.setPhotoOnServer(file).then(data => {\n      dispatch(updatePhoto(data.data.photos.small));\n    });\n    dispatch(isFetchingActionCreator(false));\n  };\n};\nexport const changeProfileDetailsOnServerTC = details => {\n  return dispatch => {\n    profileAPI.setProfileDetailsOnServer(details).then(data => {\n      dispatch(updateProfileDetails(data.data));\n    });\n  };\n};\nexport default contentReducer;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/Redux/content-reducer.js"],"names":["getProfile","profileAPI","setUnfollow","addFollow","setFollowingInProgress","ADD_POST","ADD_NEW_POST_TEXT","GET_USER_INFO","REQUESTED_USER_ID","GET_STATUS","UPDATE_STATUS","is_Fetching","update_Photo","update_DetailsInfo","initialState","myPosts","id","from","message","date","like","newPostText","userInfo","requestUserId","status","isFetching","profilePhoto","contentReducer","state","action","type","newPost","newText","copyUserInfo","photos","small","aboutMe","details","lookingForAJobDescription","addPostActionCreator","addNewPostTextActionCreator","text","getUserInfoActionCreator","addRequestedUserIdActionCreator","getStatusActionCreator","isFetchingActionCreator","updatePhoto","updateProfileDetails","getProfileThunkCreator","userID","dispatch","then","data","getStatusThunkCreator","getStatus","updateStatusThunkCreator","updateStatus","changeProfilePhotoOnServerTC","file","setPhotoOnServer","changeProfileDetailsOnServerTC","setProfileDetailsOnServer"],"mappings":"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","sourcesContent":["import {getProfile, profileAPI, setUnfollow} from \"../API/api\";\r\nimport {addFollow, setFollowingInProgress} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT'\r\nconst GET_USER_INFO = 'GET_USER-INFO'\r\nconst REQUESTED_USER_ID = 'REQUESTED-USER_ID'\r\nconst GET_STATUS='GET-STATUS'\r\nconst UPDATE_STATUS='UPDATE-STATUS'\r\nconst is_Fetching = 'is-Fetching'\r\nconst update_Photo = 'update_Photo'\r\nconst update_DetailsInfo='update_DetailsInfo'\r\n\r\nlet initialState = {\r\n    myPosts: [\r\n        {\r\n            id: '1',\r\n            from: 'Elena',\r\n            message: 'It is first post',\r\n            date: '25.06.20',\r\n            like: '25'\r\n        },\r\n        {\r\n            id: '2',\r\n            from: 'Alice',\r\n            message: 'Today is funny day',\r\n            date: '25.06.20',\r\n            like: '28'\r\n        },\r\n        {\r\n            id: '3',\r\n            from: 'Elena',\r\n            message: 'Today is boring day',\r\n            date: '26.06.20',\r\n            like: '8'\r\n        }\r\n    ],\r\n    newPostText: 'enter here',\r\n    userInfo: null,\r\n    requestUserId: 10,\r\n    status: '',\r\n    isFetching: false,\r\n    profilePhoto: ''\r\n}\r\n\r\n const contentReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return  {\r\n               ...state,\r\n               myPosts: [...state.myPosts, {id: '4', from: 'Elena', message: action.newPost, date: '25.06.20', like: '0'}],\r\n               newPostText: ''\r\n           }\r\n\r\n\r\n          break;}\r\n       case ADD_NEW_POST_TEXT: {\r\n           return  {\r\n               ...state,\r\n               newPostText: action.newText\r\n           }\r\n\r\n          break;}\r\n        case REQUESTED_USER_ID: {\r\n            return {\r\n                ...state,\r\n                requestUserId: action.id\r\n            }\r\n            break;\r\n        }\r\n        case GET_USER_INFO: {\r\n            let copyUserInfo = action.userInfo\r\n            return {\r\n                ...state,\r\n                userInfo: copyUserInfo,\r\n                profilePhoto: copyUserInfo.photos.small\r\n            }\r\n            break;\r\n        }\r\n        case GET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case is_Fetching: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case update_Photo: {\r\n\r\n            return {\r\n                ...state,\r\n                profilePhoto: action.profilePhoto\r\n            }\r\n        }\r\n        case update_DetailsInfo: {\r\n\r\n            return {\r\n                ...state,\r\n                userInfo: {\r\n                    ...state.userInfo,\r\n                    aboutMe: action.details.aboutMe,\r\n                    lookingForAJobDescription: action.details.lookingForAJobDescription\r\n                }\r\n            }\r\n        }\r\n       default:\r\n          return state;\r\n    }\r\n\r\n\r\n    return state\r\n}\r\nexport const addPostActionCreator = (newPost) => {\r\n\r\n   return (\r\n       {\r\n          type: ADD_POST,\r\n          newPost: newPost\r\n       }\r\n   )\r\n}\r\nexport const addNewPostTextActionCreator = (text) => {\r\n   return (\r\n       {\r\n          type: ADD_NEW_POST_TEXT,\r\n          newText: text\r\n\r\n       }\r\n   )\r\n}\r\nexport const getUserInfoActionCreator = (userInfo) => {\r\n    return (\r\n        {\r\n            type: GET_USER_INFO,\r\n            userInfo: userInfo\r\n\r\n        }\r\n    )\r\n}\r\nexport const addRequestedUserIdActionCreator = (id) => {\r\n    return (\r\n        {\r\n            type: REQUESTED_USER_ID,\r\n            id: id\r\n\r\n        }\r\n    )\r\n}\r\nexport const getStatusActionCreator = (status) => {\r\n    return (\r\n        {\r\n            type: GET_STATUS,\r\n            status: status\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const isFetchingActionCreator = (isFetching) => {\r\n\r\n    return ({\r\n        type: is_Fetching,\r\n        isFetching: isFetching\r\n    })\r\n}\r\n\r\nconst updatePhoto = (profilePhoto) => {\r\n    return ({\r\n        type: update_Photo,\r\n        profilePhoto: profilePhoto\r\n    })\r\n\r\n}\r\n\r\nconst updateProfileDetails = (details) => {\r\n    return ({\r\n        type: update_DetailsInfo,\r\n        details: details\r\n    })\r\n}\r\n\r\nexport const getProfileThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingActionCreator(true))\r\n        getProfile(userID)\r\n            .then(data => {\r\n                dispatch(getUserInfoActionCreator(data))\r\n            })\r\n        dispatch(isFetchingActionCreator(false))\r\n    }\r\n}\r\n\r\nexport const getStatusThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingActionCreator(true))\r\n        profileAPI.getStatus(userID)\r\n            .then(data => {\r\n                dispatch(getStatusActionCreator(data.data))\r\n                dispatch(isFetchingActionCreator(false))\r\n            })\r\n    }\r\n}\r\nexport const updateStatusThunkCreator = (status) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingActionCreator(true))\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                dispatch(getStatusActionCreator(status))\r\n                debugger\r\n            })\r\n        dispatch(isFetchingActionCreator(false))\r\n    }\r\n}\r\n\r\nexport const changeProfilePhotoOnServerTC = (file) => {\r\n    return (dispatch) => {\r\n        dispatch(isFetchingActionCreator(true))\r\n        profileAPI.setPhotoOnServer(file)\r\n            .then(data => {\r\n\r\n                dispatch(updatePhoto(data.data.photos.small))\r\n            })\r\n        dispatch(isFetchingActionCreator(false))\r\n    }\r\n}\r\nexport const changeProfileDetailsOnServerTC = (details) => {\r\n    return (dispatch) => {\r\n        profileAPI.setProfileDetailsOnServer(details)\r\n            .then(data => {\r\n                dispatch(updateProfileDetails(data.data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default contentReducer"]},"metadata":{},"sourceType":"module"}