{"ast":null,"code":"import { getUsers, setFollow, setUnfollow } from \"../API/api\";\nconst NEXT_USERS = 'NEXT-USERS';\nconst LAST_USERS = 'LAST-USERS';\nconst FOLLOW = 'FOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_FETCHING = 'SET-FETCHING';\nconst GET_CURRENT_USER_ID = 'GET-CURRENT-USER-ID';\nconst SET_FOLLOWING_IN_PROGRESS = 'SET-FOLLOWING-IN-PROGRESS';\nlet initialState = {\n  users: [],\n  pagingSize: 4,\n  startPosition: 0,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  currentUserID: 2,\n  followingInProgress: [9069]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NEXT_USERS:\n      {\n        if (state.currentPage <= Math.ceil(state.totalUsersCount / state.pagingSize)) {\n          return { ...state,\n            currentPage: state.currentPage + 1\n          };\n        } else {\n          alert(\"Пользователей больше нет\");\n          return state;\n        }\n      }\n\n    case LAST_USERS:\n      {\n        if (state.currentPage > 1) {\n          return { ...state,\n            currentPage: state.currentPage - 1\n          };\n        } else {\n          alert(\"Это начало списка\");\n          return state;\n        }\n      }\n\n    case FOLLOW:\n      {\n        let copyUsers = [...state.users];\n        copyUsers.map(item => {\n          if (item.id === action.id) {\n            item.follow = !item.follow;\n          }\n        });\n        return { ...state,\n          users: copyUsers\n        };\n      }\n\n    case SET_USERS:\n      {\n        let copyUsers = [...action.newUsers];\n        let copyState = { ...state,\n          users: copyUsers,\n          totalUsersCount: action.totalUsersCount\n        };\n        return copyState;\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.newCurrentPage\n        };\n      }\n\n    case SET_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case GET_CURRENT_USER_ID:\n      {\n        return { ...state,\n          currentUserID: action.currentUserID\n        };\n      }\n\n    case SET_FOLLOWING_IN_PROGRESS:\n      {\n        const myArr = state.followingInProgress.filter(id => id !== action.id);\n        console.log(myArr);\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.id] : state.followingInProgress.filter(id => id !== action.id)\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport const showNextUsers = () => {\n  return {\n    type: NEXT_USERS\n  };\n};\nexport const showLastUsers = () => {\n  return {\n    type: LAST_USERS\n  };\n};\nexport const addFollow = id => {\n  return {\n    type: FOLLOW,\n    id: id\n  };\n};\nexport const setUsers = (newUsers, totalUsersCount) => {\n  return {\n    type: SET_USERS,\n    newUsers: newUsers,\n    totalUsersCount: totalUsersCount\n  };\n};\nexport const setCurrentPage = newCurrentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    newCurrentPage: newCurrentPage\n  };\n};\nexport const setFetching = isFetching => {\n  return {\n    type: SET_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport const getCurrentUserID = id => {\n  debugger;\n  return {\n    type: GET_CURRENT_USER_ID,\n    currentUserID: id\n  };\n};\nexport const setFollowingInProgress = (isFetching, id) => {\n  return {\n    type: SET_FOLLOWING_IN_PROGRESS,\n    isFetching: isFetching,\n    id: id\n  };\n};\nexport const getUsersThunkCreator = (pageNumber, pageSize) => {\n  return dispatch => {\n    dispatch(setFetching(true));\n    getUsers(pageNumber, pageSize).then(response => {\n      let newArrUsers = [];\n      response.items.map(item => {\n        newArrUsers.push({\n          id: item.id,\n          name: item.name,\n          message: item.status === null ? '' : item.status,\n          url: item.photos.small,\n          follow: item.followed\n        });\n      });\n      dispatch(setUsers(newArrUsers, response.totalCount));\n      dispatch(setFetching(false));\n    });\n  };\n};\nexport const setFollowThunkCreator = id => {\n  return dispatch => {\n    dispatch(setFollowingInProgress(true, id));\n    setFollow(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(addFollow(id));\n      }\n\n      dispatch(setFollowingInProgress(false, id));\n    });\n  };\n};\nexport const setUnfollowThunkCreator = id => {\n  return dispatch => {\n    dispatch(setFollowingInProgress(true, id));\n    setUnfollow(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(addFollow(id));\n      }\n\n      dispatch(setFollowingInProgress(false, id));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/Redux/users-reducer.js"],"names":["getUsers","setFollow","setUnfollow","NEXT_USERS","LAST_USERS","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_FETCHING","GET_CURRENT_USER_ID","SET_FOLLOWING_IN_PROGRESS","initialState","users","pagingSize","startPosition","totalUsersCount","currentPage","isFetching","currentUserID","followingInProgress","usersReducer","state","action","type","Math","ceil","alert","copyUsers","map","item","id","follow","newUsers","copyState","newCurrentPage","myArr","filter","console","log","showNextUsers","showLastUsers","addFollow","setUsers","setCurrentPage","setFetching","getCurrentUserID","setFollowingInProgress","getUsersThunkCreator","pageNumber","pageSize","dispatch","then","response","newArrUsers","items","push","name","message","status","url","photos","small","followed","totalCount","setFollowThunkCreator","data","resultCode","setUnfollowThunkCreator"],"mappings":"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","sourcesContent":["import {getUsers, setFollow, setUnfollow} from \"../API/api\";\r\n\r\n\r\nconst NEXT_USERS = 'NEXT-USERS';\r\nconst LAST_USERS = 'LAST-USERS';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_FETCHING = 'SET-FETCHING';\r\nconst GET_CURRENT_USER_ID = 'GET-CURRENT-USER-ID'\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET-FOLLOWING-IN-PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pagingSize: 4,\r\n    startPosition: 0,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    currentUserID: 2,\r\n    followingInProgress: [9069]\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case NEXT_USERS: {\r\n\r\n            if (state.currentPage <= Math.ceil(state.totalUsersCount/state.pagingSize)) { return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1\r\n            }} else {\r\n                alert(\"Пользователей больше нет\")\r\n                return state\r\n            }\r\n        }\r\n        case LAST_USERS: {\r\n            if (state.currentPage > 1) {return {\r\n                ...state,\r\n                currentPage: state.currentPage - 1\r\n            }} else {\r\n                alert(\"Это начало списка\")\r\n                return state\r\n            }\r\n        }\r\n        case FOLLOW: {\r\n           let copyUsers = [...state.users]\r\n            copyUsers.map((item) => {\r\n                if (item.id === action.id) {\r\n                   item.follow = !item.follow\r\n                }\r\n            } )\r\n            return {\r\n               ...state,\r\n                users: copyUsers\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n           let copyUsers = [...action.newUsers]\r\n           let copyState = {\r\n                ...state,\r\n                users: copyUsers,\r\n               totalUsersCount: action.totalUsersCount\r\n            }\r\n            return copyState;\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n\r\n            return {\r\n                ...state,\r\n                currentPage: action.newCurrentPage\r\n            }\r\n        }\r\n        case SET_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case GET_CURRENT_USER_ID: {\r\n            return {\r\n                ...state,\r\n                currentUserID: action.currentUserID\r\n            }\r\n        }\r\n        case SET_FOLLOWING_IN_PROGRESS: {\r\nconst myArr = state.followingInProgress.filter((id) => id !== action.id)\r\n            console.log(myArr)\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching?\r\n                    [...state.followingInProgress, action.id]\r\n                    :state.followingInProgress.filter((id) => id !== action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n    return state\r\n}\r\nexport const showNextUsers = () => {\r\n\r\n    return (\r\n        {\r\n            type: NEXT_USERS\r\n        }\r\n    )\r\n}\r\nexport const showLastUsers = () => {\r\n\r\n    return (\r\n        {\r\n            type: LAST_USERS\r\n        }\r\n    )\r\n}\r\n\r\nexport const addFollow = (id) => {\r\n\r\n    return (\r\n        {\r\n            type: FOLLOW,\r\n            id: id\r\n        }\r\n    )\r\n}\r\n\r\nexport const setUsers = (newUsers, totalUsersCount) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_USERS,\r\n            newUsers: newUsers,\r\n            totalUsersCount: totalUsersCount\r\n        }\r\n    )\r\n}\r\n\r\nexport const setCurrentPage = (newCurrentPage) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_CURRENT_PAGE,\r\n            newCurrentPage: newCurrentPage\r\n        }\r\n    )\r\n}\r\n\r\nexport const setFetching = (isFetching) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_FETCHING,\r\n            isFetching: isFetching\r\n        }\r\n    )\r\n}\r\n\r\nexport const getCurrentUserID = (id) => {\r\ndebugger\r\n    return (\r\n        {\r\n            type: GET_CURRENT_USER_ID,\r\n            currentUserID: id\r\n        }\r\n    )\r\n}\r\n\r\nexport const setFollowingInProgress = (isFetching, id) => {\r\n    return (\r\n        {\r\n            type: SET_FOLLOWING_IN_PROGRESS,\r\n            isFetching: isFetching,\r\n            id: id\r\n        }\r\n    )\r\n}\r\nexport const getUsersThunkCreator = (pageNumber, pageSize) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(setFetching(true))\r\n        getUsers(pageNumber, pageSize).then(response => {\r\n\r\n            let newArrUsers = []\r\n            response.items.map((item) => {\r\n                newArrUsers.push({\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    message: (item.status === null ? '' : item.status),\r\n                    url: item.photos.small,\r\n                    follow: item.followed\r\n                })\r\n            })\r\n            dispatch(setUsers(newArrUsers, response.totalCount))\r\n            dispatch(setFetching(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const setFollowThunkCreator = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingInProgress(true, id))\r\n        setFollow(id).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(addFollow(id))\r\n            }\r\n            dispatch(setFollowingInProgress(false, id))\r\n        })\r\n    }\r\n}\r\n\r\nexport const setUnfollowThunkCreator = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(setFollowingInProgress(true, id))\r\n        setUnfollow(id).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(addFollow(id))\r\n            }\r\n            dispatch(setFollowingInProgress(false, id))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}