{"ast":null,"code":"import { getUserData, profileAPI } from \"../API/api\";\nconst GET_USER_ID = 'GET-USER-ID';\nconst SET_USER_DATA = 'SET-USER-DATA';\nlet initialState = {\n  userID: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.userData,\n          isAuth: action.isAuth\n        };\n        break;\n      }\n\n    case GET_USER_ID:\n      {\n        return state.userID;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserDataActionCreator = (userID, email, login, isAuth) => {\n  return {\n    type: SET_USER_DATA,\n    userData: {\n      userID,\n      email,\n      login,\n      isAuth\n    }\n  };\n};\nexport const getUserIDActionCreator = () => {\n  return {\n    type: GET_USER_ID\n  };\n};\nexport const getUserDataThunkCreator = () => {\n  return dispatch => {\n    getUserData().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataActionCreator(response.data.id, response.data.email, response.data.login, true));\n      }\n    });\n  };\n};\nexport const loginThunkCreator = (email, password, rememberMe) => {\n  return dispatch => {\n    profileAPI.login(email, password, rememberMe).then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataActionCreator());\n      }\n    });\n  };\n};\nexport const logoutThunkCreator = () => {\n  return dispatch => {\n    profileAPI.logout().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataActionCreator(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/Redux/auth-reducer.js"],"names":["getUserData","profileAPI","GET_USER_ID","SET_USER_DATA","initialState","userID","email","login","isFetching","isAuth","authReducer","state","action","type","userData","setUserDataActionCreator","getUserIDActionCreator","getUserDataThunkCreator","dispatch","then","response","resultCode","data","id","loginThunkCreator","password","rememberMe","logoutThunkCreator","logout"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,UAArB,QAAsC,YAAtC;AAGA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,UAAU,EAAE,KAJG;AAKfC,EAAAA,MAAM,EAAE;AALO,CAAnB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGQ,KADA;AAEH,aAAGC,MAAM,CAACE,QAFP;AAGHL,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAHZ,SAAP;AAKA;AACH;;AACD,SAAKP,WAAL;AAAkB;AACd,eAAOS,KAAK,CAACN,MAAb;AACH;;AAED;AACI,aAAOM,KAAP;AAdR;AAgBH,CAlBD;;AAqBA,OAAO,MAAMI,wBAAwB,GAAG,CAACV,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBE,MAAvB,KAAkC;AACtE,SACI;AACII,IAAAA,IAAI,EAAEV,aADV;AAEIW,IAAAA,QAAQ,EAAE;AAAET,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,KAAjB;AAAwBE,MAAAA;AAAxB;AAFd,GADJ;AAOH,CARM;AAUP,OAAO,MAAMO,sBAAsB,GAAG,MAAM;AACxC,SACI;AACIH,IAAAA,IAAI,EAAEX;AADV,GADJ;AAKH,CANM;AAQP,OAAO,MAAMe,uBAAuB,GAAG,MAAM;AACzC,SAAQC,QAAD,IAAc;AACjBlB,IAAAA,WAAW,GAAGmB,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC3BH,QAAAA,QAAQ,CAACH,wBAAwB,CAACK,QAAQ,CAACE,IAAT,CAAcC,EAAf,EAAmBH,QAAQ,CAACE,IAAT,CAAchB,KAAjC,EAAwCc,QAAQ,CAACE,IAAT,CAAcf,KAAtD,EAA6D,IAA7D,CAAzB,CAAR;AACH;AACJ,KAJD;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMiB,iBAAiB,GAAG,CAAClB,KAAD,EAAQmB,QAAR,EAAkBC,UAAlB,KAAiC;AAC9D,SAAQR,QAAD,IAAc;AACjBjB,IAAAA,UAAU,CAACM,KAAX,CAAiBD,KAAjB,EAAwBmB,QAAxB,EAAkCC,UAAlC,EAA8CP,IAA9C,CAAmDC,QAAQ,IAAI;AAC3D,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC3BH,QAAAA,QAAQ,CAACH,wBAAwB,EAAzB,CAAR;AACH;AACJ,KAJD;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMY,kBAAkB,GAAG,MAAM;AACpC,SAAQT,QAAD,IAAc;AACjBjB,IAAAA,UAAU,CAAC2B,MAAX,GAAoBT,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC3BH,QAAAA,QAAQ,CAACH,wBAAwB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAzB,CAAR;AACH;AACJ,KAJD;AAMH,GAPD;AAQH,CATM;AAYP,eAAeL,WAAf","sourcesContent":["import {getUserData, profileAPI} from \"../API/api\";\r\n\r\n\r\nconst GET_USER_ID = 'GET-USER-ID';\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.userData,\r\n                isAuth: action.isAuth\r\n            }\r\n            break\r\n        }\r\n        case GET_USER_ID: {\r\n            return state.userID\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataActionCreator = (userID, email, login, isAuth) => {\r\n    return (\r\n        {\r\n            type: SET_USER_DATA,\r\n            userData: { userID, email, login, isAuth}\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserIDActionCreator = () => {\r\n    return (\r\n        {\r\n            type: GET_USER_ID\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserDataThunkCreator = () => {\r\n    return (dispatch) => {\r\n        getUserData().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator(response.data.id, response.data.email, response.data.login, true ))\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        profileAPI.login(email, password, rememberMe).then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator())\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        profileAPI.logout().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator(null, null, null, false))\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}