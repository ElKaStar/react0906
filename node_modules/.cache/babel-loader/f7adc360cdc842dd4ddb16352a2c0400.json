{"ast":null,"code":"const NEXT_USERS = 'NEXT-USERS';\nconst LAST_USERS = 'LAST-USERS';\nconst FOLLOW = 'FOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_FETCHING = 'SET-FETCHING';\nconst GET_CURRENT_USER_ID = 'GET-CURRENT-USER-ID';\nlet initialState = {\n  users: [],\n  pagingSize: 4,\n  startPosition: 0,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  currentUserID: 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n  debugger;\n\n  switch (action.type) {\n    case NEXT_USERS:\n      {\n        if (state.currentPage <= Math.ceil(state.totalUsersCount / state.pagingSize)) {\n          return { ...state,\n            currentPage: state.currentPage + 1\n          };\n        } else {\n          alert(\"Пользователей больше нет\");\n          return state;\n        }\n      }\n\n    case LAST_USERS:\n      {\n        if (state.currentPage > 1) {\n          return { ...state,\n            currentPage: state.currentPage - 1\n          };\n        } else {\n          alert(\"Это начало списка\");\n          return state;\n        }\n      }\n\n    case FOLLOW:\n      {\n        let copyUsers = [...state.users];\n        copyUsers.map(item => {\n          if (item.id === action.id) {\n            item.follow = !item.follow;\n          }\n        });\n        return { ...state,\n          users: copyUsers\n        };\n      }\n\n    case SET_USERS:\n      {\n        let copyUsers = [...action.newUsers];\n        let copyState = { ...state,\n          users: copyUsers,\n          totalUsersCount: action.totalUsersCount\n        };\n        return copyState;\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        debugger;\n        return { ...state,\n          currentPage: action.newCurrentPage\n        };\n      }\n\n    case SET_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case GET_CURRENT_USER_ID:\n      {\n        return { ...state,\n          currentUserID: action.currentUserID\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport const showNextUsers = () => {\n  return {\n    type: NEXT_USERS\n  };\n};\nexport const showLastUsers = () => {\n  return {\n    type: LAST_USERS\n  };\n};\nexport const addFollow = id => {\n  return {\n    type: FOLLOW,\n    id: id\n  };\n};\nexport const setUsers = (newUsers, totalUsersCount) => {\n  return {\n    type: SET_USERS,\n    newUsers: newUsers,\n    totalUsersCount: totalUsersCount\n  };\n};\nexport const setCurrentPage = newCurrentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    newCurrentPage: newCurrentPage\n  };\n};\nexport const setFetching = isFetching => {\n  return {\n    type: SET_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport const getCurrentUserID = id => {\n  debugger;\n  return {\n    type: GET_CURRENT_USER_ID,\n    currentUserID: id\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/Redux/users-reducer.js"],"names":["NEXT_USERS","LAST_USERS","FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_FETCHING","GET_CURRENT_USER_ID","initialState","users","pagingSize","startPosition","totalUsersCount","currentPage","isFetching","currentUserID","usersReducer","state","action","type","Math","ceil","alert","copyUsers","map","item","id","follow","newUsers","copyState","newCurrentPage","showNextUsers","showLastUsers","addFollow","setUsers","setCurrentPage","setFetching","getCurrentUserID"],"mappings":"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","sourcesContent":["const NEXT_USERS = 'NEXT-USERS';\r\nconst LAST_USERS = 'LAST-USERS';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_FETCHING = 'SET-FETCHING';\r\nconst GET_CURRENT_USER_ID = 'GET-CURRENT-USER-ID'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pagingSize: 4,\r\n    startPosition: 0,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    currentUserID: 1\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\ndebugger\r\n\r\n    switch (action.type) {\r\n        case NEXT_USERS: {\r\n\r\n            if (state.currentPage <= Math.ceil(state.totalUsersCount/state.pagingSize)) { return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1\r\n            }} else {\r\n                alert(\"Пользователей больше нет\")\r\n                return state\r\n            }\r\n        }\r\n        case LAST_USERS: {\r\n            if (state.currentPage > 1) {return {\r\n                ...state,\r\n                currentPage: state.currentPage - 1\r\n            }} else {\r\n                alert(\"Это начало списка\")\r\n                return state\r\n            }\r\n        }\r\n        case FOLLOW: {\r\n           let copyUsers = [...state.users]\r\n            copyUsers.map((item) => {\r\n                if (item.id === action.id) {\r\n                   item.follow = !item.follow\r\n                }\r\n            } )\r\n            return {\r\n               ...state,\r\n                users: copyUsers\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n           let copyUsers = [...action.newUsers]\r\n           let copyState = {\r\n                ...state,\r\n                users: copyUsers,\r\n               totalUsersCount: action.totalUsersCount\r\n            }\r\n            return copyState;\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                currentPage: action.newCurrentPage\r\n            }\r\n        }\r\n        case SET_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case GET_CURRENT_USER_ID: {\r\n            return {\r\n                ...state,\r\n                currentUserID: action.currentUserID\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n    return state\r\n}\r\nexport const showNextUsers = () => {\r\n\r\n    return (\r\n        {\r\n            type: NEXT_USERS\r\n        }\r\n    )\r\n}\r\nexport const showLastUsers = () => {\r\n\r\n    return (\r\n        {\r\n            type: LAST_USERS\r\n        }\r\n    )\r\n}\r\n\r\nexport const addFollow = (id) => {\r\n\r\n    return (\r\n        {\r\n            type: FOLLOW,\r\n            id: id\r\n        }\r\n    )\r\n}\r\n\r\nexport const setUsers = (newUsers, totalUsersCount) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_USERS,\r\n            newUsers: newUsers,\r\n            totalUsersCount: totalUsersCount\r\n        }\r\n    )\r\n}\r\n\r\nexport const setCurrentPage = (newCurrentPage) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_CURRENT_PAGE,\r\n            newCurrentPage: newCurrentPage\r\n        }\r\n    )\r\n}\r\n\r\nexport const setFetching = (isFetching) => {\r\n\r\n    return (\r\n        {\r\n            type: SET_FETCHING,\r\n            isFetching: isFetching\r\n        }\r\n    )\r\n}\r\n\r\nexport const getCurrentUserID = (id) => {\r\ndebugger\r\n    return (\r\n        {\r\n            type: GET_CURRENT_USER_ID,\r\n            currentUserID: id\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}