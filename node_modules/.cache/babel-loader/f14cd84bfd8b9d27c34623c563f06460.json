{"ast":null,"code":"import { usersAPI } from \"../API/api\";\nconst GET_USER_ID = 'GET-USER-ID';\nconst SET_USER_DATA = 'SET-USER-DATA';\nlet initialState = {\n  userID: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.userData,\n          isAuth: true\n        };\n        break;\n      }\n\n    case GET_USER_ID:\n      {\n        return state.userID;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserDataActionCreator = (userID, email, login) => {\n  return {\n    type: SET_USER_DATA,\n    userData: {\n      userID,\n      email,\n      login\n    }\n  };\n};\nexport const getUserIDActionCreator = () => {\n  return {\n    type: GET_USER_ID\n  };\n};\nexport const getUserDataThunkCreator = () => {\n  return dispatch => {\n    usersAPI.getUserData().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataActionCreator(response.data.id, response.data.email, response.data.login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/Redux/auth-reducer.js"],"names":["usersAPI","GET_USER_ID","SET_USER_DATA","initialState","userID","email","login","isFetching","isAuth","authReducer","state","action","type","userData","setUserDataActionCreator","getUserIDActionCreator","getUserDataThunkCreator","dispatch","getUserData","then","response","resultCode","data","id"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAGA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,UAAU,EAAE,KAJG;AAKfC,EAAAA,MAAM,EAAE;AALO,CAAnB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGQ,KADA;AAEH,aAAGC,MAAM,CAACE,QAFP;AAGHL,UAAAA,MAAM,EAAE;AAHL,SAAP;AAKA;AACH;;AACD,SAAKP,WAAL;AAAkB;AACd,eAAOS,KAAK,CAACN,MAAb;AACH;;AAED;AACI,aAAOM,KAAP;AAdR;AAgBH,CAlBD;;AAqBA,OAAO,MAAMI,wBAAwB,GAAG,CAACV,MAAD,EAASC,KAAT,EAAgBC,KAAhB,KAA0B;AAC9D,SACI;AACIM,IAAAA,IAAI,EAAEV,aADV;AAEIW,IAAAA,QAAQ,EAAE;AAAET,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB;AAFd,GADJ;AAOH,CARM;AAUP,OAAO,MAAMS,sBAAsB,GAAG,MAAM;AACxC,SACI;AACIH,IAAAA,IAAI,EAAEX;AADV,GADJ;AAKH,CANM;AAQP,OAAO,MAAMe,uBAAuB,GAAG,MAAM;AACzC,SAAQC,QAAD,IAAc;AACjBjB,IAAAA,QAAQ,CAACkB,WAAT,GAAuBC,IAAvB,CAA4BC,QAAQ,IAAI;AACpC,UAAIA,QAAQ,CAACC,UAAT,KAAwB,CAA5B,EAA+B;AAC3BJ,QAAAA,QAAQ,CAACH,wBAAwB,CAACM,QAAQ,CAACE,IAAT,CAAcC,EAAf,EAAmBH,QAAQ,CAACE,IAAT,CAAcjB,KAAjC,EAAwCe,QAAQ,CAACE,IAAT,CAAchB,KAAtD,CAAzB,CAAR;AACH;AACJ,KAJD;AAMH,GAPD;AAQH,CATM;AAYP,eAAeG,WAAf","sourcesContent":["import {usersAPI} from \"../API/api\";\r\n\r\n\r\nconst GET_USER_ID = 'GET-USER-ID';\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.userData,\r\n                isAuth: true\r\n            }\r\n            break\r\n        }\r\n        case GET_USER_ID: {\r\n            return state.userID\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataActionCreator = (userID, email, login) => {\r\n    return (\r\n        {\r\n            type: SET_USER_DATA,\r\n            userData: { userID, email, login}\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserIDActionCreator = () => {\r\n    return (\r\n        {\r\n            type: GET_USER_ID\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserDataThunkCreator = () => {\r\n    return (dispatch) => {\r\n        usersAPI.getUserData().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator(response.data.id, response.data.email, response.data.login ))\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}