{"ast":null,"code":"import { getProfile, setUnfollow } from \"../API/api\";\nimport { addFollow, setFollowingInProgress } from \"./users-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT';\nconst GET_USER_INFO = 'GET_USER-INFO';\nconst REQUESTED_USER_ID = 'REQUESTED-USER_ID';\nlet initialState = {\n  myPosts: [{\n    id: '1',\n    from: 'Elena',\n    message: 'It is first post',\n    date: '25.06.20',\n    like: '25'\n  }, {\n    id: '2',\n    from: 'Alice',\n    message: 'Today is funny day',\n    date: '25.06.20',\n    like: '28'\n  }, {\n    id: '3',\n    from: 'Elena',\n    message: 'Today is boring day',\n    date: '26.06.20',\n    like: '8'\n  }],\n  newPostText: 'enter here',\n  userInfo: null,\n  requestUserId: 10\n};\n\nconst contentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return { ...state,\n          myPosts: [...state.myPosts, {\n            id: '4',\n            from: 'Elena',\n            message: state.newPostText,\n            date: '25.06.20',\n            like: '0'\n          }],\n          newPostText: ''\n        };\n        break;\n      }\n\n    case ADD_NEW_POST_TEXT:\n      {\n        return { ...state,\n          newPostText: action.newText\n        };\n        break;\n      }\n\n    case REQUESTED_USER_ID:\n      {\n        return { ...state,\n          requestUserId: action.id\n        };\n        break;\n      }\n\n    case GET_USER_INFO:\n      {\n        let copyUserInfo = action.userInfo;\n        debugger;\n        return { ...state,\n          userInfo: copyUserInfo\n        };\n        break;\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const addNewPostTextActionCreator = text => {\n  return {\n    type: ADD_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport const getUserInfoActionCreator = userInfo => {\n  return {\n    type: GET_USER_INFO,\n    userInfo: userInfo\n  };\n};\nexport const addRequestedUserIdActionCreator = id => {\n  return {\n    type: REQUESTED_USER_ID,\n    id: id\n  };\n};\nexport const getProfileThunkCreator = userID => {\n  return dispatch => {\n    getProfile(userID).then(data => {\n      dispatch(getUserInfoActionCreator(data));\n    });\n  };\n};\nexport default contentReducer;","map":{"version":3,"sources":["C:/Users/Семен Титов/WebstormProjects/react0906/src/Redux/content-reducer.js"],"names":["getProfile","setUnfollow","addFollow","setFollowingInProgress","ADD_POST","ADD_NEW_POST_TEXT","GET_USER_INFO","REQUESTED_USER_ID","initialState","myPosts","id","from","message","date","like","newPostText","userInfo","requestUserId","contentReducer","state","action","type","newText","copyUserInfo","addPostActionCreator","addNewPostTextActionCreator","text","getUserInfoActionCreator","addRequestedUserIdActionCreator","getProfileThunkCreator","userID","dispatch","then","data"],"mappings":"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","sourcesContent":["import {getProfile, setUnfollow} from \"../API/api\";\r\nimport {addFollow, setFollowingInProgress} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst ADD_NEW_POST_TEXT = 'ADD-NEW-POST-TEXT'\r\nconst GET_USER_INFO = 'GET_USER-INFO'\r\nconst REQUESTED_USER_ID = 'REQUESTED-USER_ID'\r\n\r\nlet initialState = {\r\n    myPosts: [\r\n        {\r\n            id: '1',\r\n            from: 'Elena',\r\n            message: 'It is first post',\r\n            date: '25.06.20',\r\n            like: '25'\r\n        },\r\n        {\r\n            id: '2',\r\n            from: 'Alice',\r\n            message: 'Today is funny day',\r\n            date: '25.06.20',\r\n            like: '28'\r\n        },\r\n        {\r\n            id: '3',\r\n            from: 'Elena',\r\n            message: 'Today is boring day',\r\n            date: '26.06.20',\r\n            like: '8'\r\n        }\r\n    ],\r\n    newPostText: 'enter here',\r\n    userInfo: null,\r\n    requestUserId: 10\r\n}\r\n\r\n const contentReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return  {\r\n               ...state,\r\n               myPosts: [...state.myPosts, {id: '4', from: 'Elena', message: state.newPostText, date: '25.06.20', like: '0'}],\r\n               newPostText: ''\r\n           }\r\n\r\n\r\n          break;}\r\n       case ADD_NEW_POST_TEXT: {\r\n           return  {\r\n               ...state,\r\n               newPostText: action.newText\r\n           }\r\n\r\n          break;}\r\n        case REQUESTED_USER_ID: {\r\n            return {\r\n                ...state,\r\n                requestUserId: action.id\r\n            }\r\n            break;\r\n        }\r\n        case GET_USER_INFO: {\r\n            let copyUserInfo = action.userInfo\r\n            debugger\r\n            return {\r\n                ...state,\r\n                userInfo: copyUserInfo\r\n            }\r\n            break;\r\n        }\r\n       default:\r\n          return state;\r\n    }\r\n\r\n\r\n    return state\r\n}\r\nexport const addPostActionCreator = () => {\r\n\r\n   return (\r\n       {\r\n          type: ADD_POST\r\n       }\r\n   )\r\n}\r\nexport const addNewPostTextActionCreator = (text) => {\r\n   return (\r\n       {\r\n          type: ADD_NEW_POST_TEXT,\r\n          newText: text\r\n\r\n       }\r\n   )\r\n}\r\nexport const getUserInfoActionCreator = (userInfo) => {\r\n    return (\r\n        {\r\n            type: GET_USER_INFO,\r\n            userInfo: userInfo\r\n\r\n        }\r\n    )\r\n}\r\nexport const addRequestedUserIdActionCreator = (id) => {\r\n    return (\r\n        {\r\n            type: REQUESTED_USER_ID,\r\n            id: id\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const getProfileThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        getProfile(userID)\r\n            .then(data => {\r\n                dispatch(getUserInfoActionCreator(data))\r\n            })\r\n    }\r\n}\r\n\r\nexport default contentReducer"]},"metadata":{},"sourceType":"module"}