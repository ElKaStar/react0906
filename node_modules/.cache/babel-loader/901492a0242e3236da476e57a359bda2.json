{"ast":null,"code":"import*as axios from\"axios\";import React from'react';var instance=axios.create({withCredentials:true,baseURL:'https://social-network.samuraijs.com/api/1.0/',headers:{\"API-KEY\":'256471cd-5892-4bd3-800b-bd95c9c9c706'}});export var getUsers=function getUsers(pageNumber,pageSize){return instance.get(\"users?page=\".concat(pageNumber,\"&count=\").concat(pageSize)).then(function(response){return response.data;});};export var getProfile=function getProfile(userID){console.warn('Obsolete method: please use profileAPI object');return profileAPI.getProfile(userID);};export var getUserData=function getUserData(){return instance.get(\"auth/me\").then(function(response){return response.data;});};export var setFollow=function setFollow(id){return instance.post(\"follow/\".concat(id)).then(function(response){return response.data;});};export var setUnfollow=function setUnfollow(id){return instance.delete(\"follow/\".concat(id)).then(function(response){return response.data;});};export var profileAPI={getProfile:function getProfile(userID){return instance.get(\"profile/\".concat(userID)).then(function(response){return response.data;});},getStatus:function getStatus(userID){return instance.get(\"/profile/status/\".concat(userID)).then(function(response){return response;});},updateStatus:function updateStatus(status){var myStatus={status:status};return instance.put(\"/profile/status\",myStatus).then(function(response){return response;});},login:function login(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe}).then(function(response){return response.data;});},logout:function logout(){return instance.delete(\"auth/login\").then(function(response){return response;}).then(function(response){return response.data;});}};","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/API/api.js"],"names":["axios","React","instance","create","withCredentials","baseURL","headers","getUsers","pageNumber","pageSize","get","then","response","data","getProfile","userID","console","warn","profileAPI","getUserData","setFollow","id","post","setUnfollow","delete","getStatus","updateStatus","status","myStatus","put","login","email","password","rememberMe","logout"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\r\nimport React from 'react'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": '256471cd-5892-4bd3-800b-bd95c9c9c706'}\r\n})\r\n\r\n export const getUsers = (pageNumber, pageSize) => {\r\n        return instance.get(`users?page=${pageNumber}&count=${pageSize}`).then(response => response.data)\r\n    }\r\n\r\nexport const   getProfile = (userID) => {\r\n    console.warn('Obsolete method: please use profileAPI object')\r\n        return profileAPI.getProfile(userID)\r\n    }\r\n\r\nexport const getUserData = () => {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    }\r\n\r\n\r\nexport const  setFollow = (id) => {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    }\r\n\r\nexport const setUnfollow = (id) =>  {\r\n        return instance.delete(`follow/${id}`).then(response => response.data)\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`).then(response => response.data)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`/profile/status/${userID}`).then(response => response)\r\n    },\r\n    updateStatus(status) {\r\n        let myStatus = {\r\n            status: status\r\n        }\r\n        return instance.put(`/profile/status`, myStatus).then(response => response)\r\n    },\r\n    login(email, password, rememberMe= false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => response).then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}