{"ast":null,"code":"import { getUserData, profileAPI } from \"../API/api\";\nimport { stopSubmit } from \"redux-form\";\nconst GET_USER_ID = 'GET-USER-ID';\nconst SET_USER_DATA = 'SET-USER-DATA';\nlet initialState = {\n  userID: null,\n  email: null,\n  password: null,\n  isFetching: false,\n  isAuth: false,\n  login: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  console.log(action.type, action);\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.userData\n        };\n        break;\n      }\n\n    case GET_USER_ID:\n      {\n        return state.userID;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUserDataActionCreator = (userID, email, password, isAuth, login) => {\n  console.log(userID, email, password, isAuth);\n  return {\n    type: SET_USER_DATA,\n    userData: {\n      userID,\n      email,\n      password,\n      isAuth,\n      login\n    }\n  };\n};\nexport const getUserIDActionCreator = () => {\n  return {\n    type: GET_USER_ID\n  };\n};\nexport const getUserDataThunkCreator = () => async dispatch => {\n  let response = await getUserData();\n\n  if (response.resultCode === 0) {\n    dispatch(setUserDataActionCreator(response.data.id, response.data.email, null, true, response.data.login));\n  }\n};\nexport const loginThunkCreator = (email, password, rememberMe) => {\n  return dispatch => {\n    profileAPI.login(email, password, rememberMe).then(response => {\n      console.log('thunkcreator login');\n\n      if (response.resultCode === 0) {\n        console.log(response);\n        dispatch(getUserDataThunkCreator());\n      } else {\n        let messages = response.messages.length > 0 ? response.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"LoginForm\", {\n          _error: messages\n        }));\n      }\n    });\n  };\n};\nexport const logoutThunkCreator = () => {\n  return dispatch => {\n    profileAPI.logout().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataActionCreator(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/licos/WebstormProjects/react/react0906/src/Redux/auth-reducer.js"],"names":["getUserData","profileAPI","stopSubmit","GET_USER_ID","SET_USER_DATA","initialState","userID","email","password","isFetching","isAuth","login","authReducer","state","action","console","log","type","userData","setUserDataActionCreator","getUserIDActionCreator","getUserDataThunkCreator","dispatch","response","resultCode","data","id","loginThunkCreator","rememberMe","then","messages","length","_error","logoutThunkCreator","logout"],"mappings":"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","sourcesContent":["import {getUserData, profileAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst GET_USER_ID = 'GET-USER-ID';\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    password: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n    login: null\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\nconsole.log(action.type, action)\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.userData\r\n            }\r\n            break\r\n        }\r\n        case GET_USER_ID: {\r\n            return state.userID\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserDataActionCreator = (userID, email, password, isAuth, login) => {\r\n    console.log(userID, email, password, isAuth)\r\n    return (\r\n        {\r\n            type: SET_USER_DATA,\r\n            userData: { userID, email, password, isAuth, login}\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserIDActionCreator = () => {\r\n    return (\r\n        {\r\n            type: GET_USER_ID\r\n        }\r\n    )\r\n}\r\n\r\nexport const getUserDataThunkCreator = () => async (dispatch) => {\r\n        let response = await getUserData()\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator(response.data.id, response.data.email, null , true,  response.data.login))\r\n            }\r\n        }\r\n\r\n\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        profileAPI.login(email, password, rememberMe).then(response => {\r\n            console.log('thunkcreator login')\r\n            if (response.resultCode === 0) {\r\n                console.log(response)\r\n                dispatch(getUserDataThunkCreator())\r\n            } else {\r\n                let messages = response.messages.length > 0? response.messages[0]: \"Some error\"\r\n                dispatch(stopSubmit(\"LoginForm\", {_error: messages}))\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        profileAPI.logout().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setUserDataActionCreator(null, null, null, false))\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}